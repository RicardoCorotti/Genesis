package com.genesis.auction.api.controller;

import java.time.LocalDateTime;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.genesis.auction.api.exceptionhandler.Problem;
import com.genesis.auction.domain.exception.InvalidBidValueException;
import com.genesis.auction.domain.model.Bid;
import com.genesis.auction.domain.service.BidService;

@RestController
@RequestMapping("/bids")
public class BidController {

	@Autowired
	private BidService bidService;
	
	@PostMapping
	@ResponseStatus(HttpStatus.CREATED)
	public void add(@RequestBody @Valid Bid bid) {
		bid = bidService.add(bid);
	}
	
	@ExceptionHandler(InvalidBidValueException.class)
	public ResponseEntity<?> handleInvalidBidValueException(
			InvalidBidValueException e) {
		
		Problem problem = Problem.builder()
				.dateTime(LocalDateTime.now())
				.message(e.getMessage()).build();
		
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getMessage());
		
	}
		
}
